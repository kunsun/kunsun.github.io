3:I[9275,[],""]
5:I[1343,[],""]
6:I[9512,["291","static/chunks/291-6bbee38a07e9cada.js","185","static/chunks/app/layout-63fef89d60d429d4.js"],"ThemeProvider"]
7:I[8871,["291","static/chunks/291-6bbee38a07e9cada.js","185","static/chunks/app/layout-63fef89d60d429d4.js"],"default"]
4:["slug","%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F","d"]
0:["pRzpiwg6pXJZjwfKMKBnX",[[["",{"children":["blog",{"children":[["slug","%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F","d"],{"children":["__PAGE__?{\"slug\":\"设计模式\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cb67a214fed64752.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"zh-CN","suppressHydrationWarning":true,"children":["$","body",null,{"className":"__variable_c1e5c9 __variable_3a0388","children":["$","$L6",null,{"attribute":"class","children":[["$","$L7",null,{}],["$","main",null,{"className":"flex max-w-2xl mx-auto bg-gradient","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]]}]}]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/14d650bd7f8bf870.css","precedence":"next","crossOrigin":"$undefined"}]],"$L8"]]]]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Create Next App"}],["$","meta","3",{"name":"description","content":"Generated by create next app"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","5",{"name":"next-size-adjust"}]]
1:null
2:["$","main",null,{"className":"font-mono","children":[["$","h1",null,{"children":"前端设计模式"}],["$","div",null,{"className":"text-[14px] text-tertiary mt-1","children":"2021-02-02"}],["$","div",null,{"className":"markdown mt-10","children":"$L9"}]]}]
9:[["$","p",null,{"children":"六大原则："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"开闭原则： 对扩展开放，对修改关闭"}],"\n",["$","li",null,{"children":"里氏替换：任何基类可以发挥作用的地方，子类一定可以发挥作用。 继承复用。 里氏替换原则是开闭原则的补充。"}],"\n",["$","li",null,{"children":"依赖反转原则：针对接口编程，依赖于抽象"}],"\n",["$","li",null,{"children":"接口隔离原则：减少耦合"}],"\n",["$","li",null,{"children":"最少知道原则： 一个系统的功能模块应该最大限度地不知晓其他模块的出现，减少感知，模块应相对独立。"}],"\n",["$","li",null,{"children":"合成复用原则： 尽量使用合成 / 聚合的方式，而不是使用继承。 组合是非常优秀的编程思想，这一点在函数式编程范畴中得到了最大程度的印证。"}],"\n"]}],"\n",["$","p",null,{"children":"三大类型："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"创建型"}],"\n",["$","li",null,{"children":"结构型"}],"\n",["$","li",null,{"children":"行为型"}],"\n"]}],"\n",["$","p",null,{"children":"创建型：\n创建型的五种设计模式提供了更加灵活的对象创建方式，同时可以隐藏创建的具体逻辑。与直接使用 new 运算符实例化对象相比，这些模式具有更强的灵活性以及可定制性。"}],"\n",["$","p",null,{"children":"结构型：\n结构型的七种设计模式关注类和对象的组合，结合继承的概念，这些设计模式能使得对象具有更加灵活的功能设定。"}],"\n",["$","p",null,{"children":"行为型：\n行为型的十一种设计模式聚焦于对象和类之间的通信，这是构建大型程序架构必不可少的环节。"}],"\n",["$","p",null,{"children":"参考网站："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"https://github.com/DavidCai1993/JsPatterns-ES6"}],"\n",["$","li",null,{"children":"《Learning JavaScript Design Patterns》： https://addyosmani.com/resources/essentialjsdesignpatterns/book/#observerpatternjavascript"}],"\n",["$","li",null,{"children":"http://loredanacirstea.github.io/es6-design-patterns/#composite"}],"\n"]}],"\n",["$","h2",null,{"children":"工厂模式"}],"\n",["$","p",null,{"children":"创建型工厂模式："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"简单工厂模式（Simple Factory）"}],"\n",["$","li",null,{"children":"工厂方法模式（Factory Method）"}],"\n",["$","li",null,{"children":"抽象工厂模式（Abstract Factory）"}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-js","children":"class jQuery {\n  constructor(selector) {\n    super(selector)\n  }\n  //  ....\n}\n\nwindow.$ = function (selector) {\n  return new jQuery(selector)\n}\n"}]}],"\n",["$","h2",null,{"children":"单例模式"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-js","children":"class Singleton {\n  constructor() {\n    if (!Singleton.instance) {\n      Singleton.instance = this\n    }\n\n    return Singleton.instance\n  }\n}\n"}]}],"\n",["$","h2",null,{"children":"建造者模式"}],"\n",["$","p",null,{"children":"分步骤分情况构建一个复杂的对象"}],"\n",["$","h2",null,{"children":"外观模式"}],"\n",["$","p",null,{"children":"例如："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"跨浏览器兼容性的封装"}],"\n",["$","li",null,{"children":"$$(document).ready"}],"\n"]}],"\n",["$","h2",null,{"children":"适配器模式"}],"\n",["$","p",null,{"children":"与外观模式思路类似，用于适配两个以上接口不兼容问题"}],"\n",["$","h2",null,{"children":"享元模式"}],"\n",["$","p",null,{"children":"在前端中应用广泛，但是没太懂"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"事件代理"}],"\n",["$","li",null,{"children":"React 合成事件的池化机制"}],"\n"]}],"\n",["$","h2",null,{"children":"代理模式"}],"\n",["$","p",null,{"children":"ES6 的 Proxy\nJQuery 的$.proxy 也是代理模式的体现"}],"\n",["$","h2",null,{"children":"装饰者模式"}],"\n",["$","p",null,{"children":"在不改变原对象的基础上，对其对象进行包装和拓展，使原对象能够应对更加复杂的需求\n例子："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"connect"}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-js","children":"export default connect(mapStateToProps, actionCreators)(App)\n"}]}],"\n",["$","ol",null,{"start":"2","children":["\n",["$","li",null,{"children":"antd form"}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-js","children":"class CustomizedForm extends React.Component {}\n\nCustomizedForm = Form.create({})(CustomizedForm)\n"}]}],"\n",["$","h2",null,{"children":"职责链模式"}],"\n",["$","p",null,{"children":"建立一个流程链条，一个请求从一端进入，并从一个职责根据需求，流转进入另一个对象，直到找到合适的处理程序\n有点“中间件”的思想"}],"\n",["$","h2",null,{"children":"策略模式"}],"\n",["$","p",null,{"children":"环境类 + 策略\n例子："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"V8 排序算法"}],"\n",["$","li",null,{"children":"验证器"}],"\n"]}]]
