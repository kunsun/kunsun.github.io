{"componentChunkName":"component---src-templates-blog-post-js","path":"/css/","result":{"data":{"site":{"siteMetadata":{"title":"kunsun"}},"markdownRemark":{"html":"<p>默认 box-sizing: content-box; 计算 content\nbox-sizing: border-box; 计算 border+padding+content</p>\n<h2>BFC / Block Formatting Context</h2>\n<p>一个 BFC 是一个独立容器，决定了元素如何对其内容进行定位，以及与其他元素的关系与相互作用。\n相关链接：<a href=\"https://tech.youzan.com/css-margin-collapse/\">https://tech.youzan.com/css-margin-collapse/</a></p>\n<p>BFC 如何定位：</p>\n<ol>\n<li>内部的 Box 会垂直一个接一个放置</li>\n<li>Box 垂直方向的距离有 margin 决定，属于同一个 BFC 的两个相邻的（没有被 padding、border、clear 和 line box 分隔开）盒子（可能是父子元素，也可能是兄弟元素）margin 会发生重叠</li>\n<li>BFC 的区域不会与 float Box 重叠</li>\n<li>BFC 是页面上的独立容器，容器里面的元素不会在布局上影响到外面的元素</li>\n<li>生成 BFC 的元素不会和在流中的子元素发生空白边折叠</li>\n<li>BFC 高度包含浮动元素</li>\n<li>处于同一个 BFC 中的元素相互影响，可能会发生 margin collapse</li>\n<li>浮动盒的区域不会叠加到 BFC 上</li>\n</ol>\n<p>满足一个条件即可触发 BFC：</p>\n<ol>\n<li>html 根元素</li>\n<li>float 的值不为 none</li>\n<li>overflow 的值不为 visible</li>\n<li>display 的值为 inline-block, table-cell, table-caption</li>\n<li>position 的值为 absolute 或 fixed</li>\n</ol>\n<p>经典问题：</p>\n<ol>\n<li>高度坍塌， margin 重叠</li>\n</ol>\n<h2>CSS3 新特性</h2>\n<ol>\n<li>border-image</li>\n<li>linear-gradient</li>\n<li>transition</li>\n<li>flex</li>\n</ol>\n<h2>Flexbox</h2>\n<p>flex 布局</p>\n<h2>一些兼容性问题</h2>\n<ol>\n<li>Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示,可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决。</li>\n</ol>\n<h2>display:none 与 visibility:hidden 的区别</h2>\n<p>display : none 隐藏对应的元素，在文档布局中不再分配空间（回流+重绘）\nvisibility:hidden 隐藏对应的元素，在文档布局中仍保留原来的空间（重绘）</p>\n<h2>浮动元素</h2>\n<p>浮动定位不属于正常的页面流</p>\n<p>浮动带来的问题：</p>\n<ol>\n<li>父元素的高度无法被撑开，影响与父元素同级的元素</li>\n<li>与浮动元素同级的非浮动元素（内联元素）会跟随其后</li>\n<li>若非第一个元素浮动，则该元素之前的元素也需要浮动，否则会影响页面显示的结构。</li>\n</ol>\n<p>清除浮动的方式：</p>\n<ol>\n<li>父级 div 定义 height（不推荐）</li>\n<li>最后一个浮动元素后加空 div，添加样式 clear:both（不推荐）</li>\n<li>用伪元素 after 清除（推荐）</li>\n<li>包含浮动元素的父标签添加样式 overflow 不为 visible（推荐，但注意 position 带来的问题）</li>\n<li>父级 div 定义 zoom（IE8 以下）</li>\n</ol>\n<h2>上下 margin 重合问题</h2>\n<p>W3C 文章：<a href=\"https://www.w3.org/TR/CSS2/box.html#collapsing-margins\">https://www.w3.org/TR/CSS2/box.html#collapsing-margins</a>\n如何避免外边距叠加：</p>\n<ol>\n<li>浮动元素不会与任何元素发生叠加，也包括它的子元素</li>\n<li>创建了 BFC 的元素不会和它的子元素发生外边距叠加</li>\n<li>绝对定位元素和其他任何元素之间不发生外边距叠加，也包括它的子元素</li>\n<li>inline-block 元素和其他任何元素之间不发生外边距叠加，也包括它的子元素</li>\n<li>普通流中的块级元素的 margin-bottom 永远和它相邻的下一个块级元素的 margin-top 叠加，除非相邻的兄弟元素 clear</li>\n<li>普通流中的块级元素（没有 border-top、没有 padding-top）的 margin-top 和它的第一个普通流中的子元素（没有 clear）发生 margin-top 叠加</li>\n<li>普通流中的块级元素（height 为 auto、min-height 为 0、没有 border-bottom、没有 padding-bottom）和它的最后一个普通流中的子元素（没有自身发生 margin 叠加或 clear）发生 margin-bottom 叠加</li>\n<li>如果一个元素的 min-height 为 0、没有 border、没有 padding、高度为 0 或者 auto、不包含子元素，那么它自身的外边距会发生叠加</li>\n</ol>\n<h2>响应式设计</h2>\n<deckgo-highlight-code language=\"html\" terminal=\"carbon\"  >\n          <code slot=\"code\">&lt;meta\n  name=&quot;’viewport’&quot;\n  content=&quot;”width&quot;\n  =&quot;device-width,&quot;\n  initial-scale=&quot;1.&quot;\n  maximum-scale=&quot;1,user-scalable&quot;\n  =&quot;no”&quot;\n/&gt;</code>\n        </deckgo-highlight-code>\n<h2>line-height</h2>\n<p>两行文字间基线的距离。\n经典：多行文本垂直局中</p>\n<h2>Chrome 支持小于 12px 的文字</h2>\n<p>chrome 中可以直接设置</p>\n<deckgo-highlight-code language=\"css\" terminal=\"carbon\"  >\n          <code slot=\"code\">p {\n  font-size: 10px;\n  -webkit-transform: scale(0.8); //0.8是缩放比例\n}</code>\n        </deckgo-highlight-code>\n<h2>消除 inline-block 元素间的换行符空格间隙</h2>\n<ol>\n<li>用 letter-spacing</li>\n<li>font-size</li>\n</ol>\n<h2>inline-block</h2>\n<p>不换行，不可以设置大小，大小又内容决定</p>\n<h2>3 栏布局</h2>\n<ol>\n<li>column</li>\n<li>左右 float，中间控制 margin</li>\n<li>左右 float+margin,中间 BFC，因为 BFC 区域不会与浮动元素重叠</li>\n<li>全部 float left</li>\n<li>table 布局，但无法设置栏间距离</li>\n<li>绝对定位</li>\n</ol>\n<h2>Flex 布局</h2>\n<p>前端客栈知乎专栏：<a href=\"https://zhuanlan.zhihu.com/p/25070186\">https://zhuanlan.zhihu.com/p/25070186</a></p>\n<ol>\n<li>flex-bisic: 设置子项的占用空间</li>\n<li>flex-grow: flex item 的拉伸因子，用来“瓜分”父项的“剩余空间”</li>\n<li>flex-shrink: 指定了 flex 元素的收缩规则</li>\n</ol>\n<p>flex-grow 与 flex-shrink 正好相对\nflex-grow 的计算方法\nflex-shrink 的计算方法</p>\n<h2>!DOCTYPE html 的作用</h2>\n<p>告诉解析器，应该使用什么样的文档类型解析文档</p>\n<h2>解决 img 图片自带边距的问题</h2>\n<ol>\n<li>转换为 block</li>\n<li>给 img 定义 vertical-align</li>\n<li>父容器的 font-size 设为 0</li>\n<li>父容器设置与图片一样高</li>\n</ol>","frontmatter":{"date":"February 02, 2021","path":"/css","title":"CSS知识点"}}},"pageContext":{"id":"7caa78ff-a5cb-50bf-b849-506c7216c8e9"}},"staticQueryHashes":[],"slicesMap":{}}