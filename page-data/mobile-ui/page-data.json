{"componentChunkName":"component---src-templates-blog-post-js","path":"/mobile-ui/","result":{"data":{"site":{"siteMetadata":{"title":"kunsun"}},"markdownRemark":{"html":"<p>参考文章：</p>\n<ol>\n<li>\n<p><a href=\"https://juejin.im/post/5d736747e51d4561ff66688c\">https://juejin.im/post/5d736747e51d4561ff66688c</a></p>\n</li>\n<li>\n<p><a href=\"https://juejin.im/post/5cddf289f265da038f77696c#heading-28\">https://juejin.im/post/5cddf289f265da038f77696c#heading-28</a></p>\n</li>\n<li>\n<p><a href=\"https://www.kancloud.cn/chandler/web_app/1477878\">https://www.kancloud.cn/chandler/web_app/1477878</a></p>\n</li>\n<li>\n<p><a href=\"https://www.kancloud.cn/chandler/web_app/591334\">https://www.kancloud.cn/chandler/web_app/591334</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/jawil/blog/issues/21\">https://github.com/jawil/blog/issues/21</a></p>\n</li>\n<li>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/devicePixelRatio\">https://developer.mozilla.org/zh-CN/docs/Web/API/Window/devicePixelRatio</a></p>\n</li>\n<li>\n<p><a href=\"http://www.alloyteam.com/2016/03/mobile-web-adaptation-tool-rem/\">http://www.alloyteam.com/2016/03/mobile-web-adaptation-tool-rem/</a></p>\n</li>\n<li>\n<p><a href=\"https://zhuanlan.zhihu.com/p/31713047\">https://zhuanlan.zhihu.com/p/31713047</a></p>\n</li>\n</ol>\n<h2>先熟悉几个概念</h2>\n<h3>像素</h3>\n<p>一个像素通常被视为影像的最小的完整取样。打印机的物理像素等于打印机的墨点。</p>\n<h3>物理像素</h3>\n<p>也称为设备像素，每个设备的像素都是固定的，如 iphone5： 640 * 1136，一个物理像素是显示器的最小物理显示单元。 单位是 pt</p>\n<h3>逻辑像素</h3>\n<p>=== CSS 像素。是图像的基本采样单位\n=== 设备独立像素\n=== 设备无关的逻辑像素</p>\n<h3>devicePixelRatio，简称 dpr</h3>\n<ol>\n<li>当前显示设备的物理像素分辨率与 CSS 像素分辨率的比值：设备像素比（dpr）= 屏幕物理像素（dp）/ CSS 像素</li>\n<li>设备像素比 （dpr）=物理像素（pp） / 设备独立像素（dip）</li>\n</ol>\n<h3>document.documentElement.clientWidth</h3>\n<p>大多数移动端设备都默认 980px</p>\n<h3>屏幕分辨率</h3>\n<p>屏幕分辨率指的是物理像素，而不是理想视口。</p>\n<h3>dpi or ppi</h3>\n<h3>移动端浏览器渲染在一个 viewport 的页面中的</h3>\n<h3>window.innerHeight / window.innerWidth</h3>\n<p>可视区域</p>\n<p>screen.height 屏幕高度 >= screen.availHeight 屏幕可用高度 >= window.outerHeight 浏览器高度 >= window.innerHeight 浏览器可用高度 >= document.documentElement.clientHeight body 展示高度，去除了滚动条</p>\n<p>还有一个概念，body.offsetHeight：页面 body 总高度</p>\n<h3>viewport 是容纳 html 的元素</h3>\n<p>document.documentElement 是指 viewport 的</p>\n<h2>适配方案</h2>\n<p>需要解决的两个问题：</p>\n<ol>\n<li>各终端下的适配问题</li>\n<li>Retina 屏的细节处理</li>\n</ol>\n<p>引用 flexible：</p>\n<blockquote>\n<p>由于 viewport 单位得到众多浏览器的兼容，lib-flexible 这个过渡方案已经可以放弃使用，不管是现在的版本还是以前的版本，都存有一定的问题。建议大家开始使用 viewport 来替代此方。</p>\n</blockquote>\n<h2>视图</h2>\n<p>viewport 基本上是当前文档的可见部分</p>\n<ol>\n<li>布局视口(layout viewport)</li>\n<li>视觉视口(visual viewport)</li>\n<li>理想视口 ideal viewport</li>\n</ol>\n<deckgo-highlight-code language=\"html\" terminal=\"carbon\"  >\n          <code slot=\"code\">&lt;meta name=&quot;viewport&quot; content=&quot;width=&quot; /&gt;</code>\n        </deckgo-highlight-code>\n<h3>布局视口</h3>\n<p>移动端，布局视口宽度默认为 980px，使得 pc 端页面可以在手机中呈现，默认会缩小页面，使得在一屏幕中展示这个页面。\nmeta 中设置的 width 指的是布局视口的宽度，即 document.documentELement.clientWidth。\ncss 媒体查询的宽度也是指布局视口宽度。</p>\n<h3>视觉视口</h3>\n<p>用户在移动设备屏幕上能看到的那部分区域。 当前浏览器可用视图包括滚动条</p>\n<h3>理想视口</h3>\n<p>布局视口明显对用户是不友好的，完全忽略了手机本身的尺寸。\n就是手机屏幕的大小，screen.width</p>\n<p>【设计稿】：设计师给的 750px 宽的设计稿是根据设备像素（device pixel，物理像素）为单位制作的设计稿。\n【web 页面编写】：前端工程师在编码 web 页面时所写的 CSS 像素 则需要根据 设备像素比 来进行换算。</p>\n<h2>如何做移动端尺寸自适应</h2>\n<ol>\n<li>直接将 width 设置为设计稿尺寸 1080，缺点是影响媒体查询</li>\n<li>用 inital-scale 整体缩小画布，布局尺寸变大，即容纳的 css 像素变多。采用依据 dpr 动态改变，放大布局视图宽度 width == screen.width * dpr。</li>\n</ol>\n<p>设置 initial-scale 值为 0.5，那么 layout viewport 的大小就是 ideal viewport 的两倍。</p>\n<p>页面被用户放大，视觉视口内 CSS 像素数量减少；被用户缩小，视觉视口内 CSS 像素数量增多就行了。\ninitial-scale=1 与 width=device-width 的效果是一样的</p>","frontmatter":{"date":"February 02, 2021","path":"/mobile-ui","title":"移动端UI适配"}}},"pageContext":{"id":"7bd60601-2168-5714-abcb-a3003f59e1f8"}},"staticQueryHashes":[],"slicesMap":{}}